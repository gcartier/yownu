;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Space Biome
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2013
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module space.biome jazz


(import (world)
        (world.autoload)
        (world.geometry)
        (world.light)
        (world.planet)
        (world.syntax (phase syntax))
        (world.zone))


;;;
;;;; Biome
;;;


(class Space-Biome extends Object
  
  
  (slot name  getter generate)
  (slot earth getter generate)
  (slot trees getter generate)
  
  
  (method override (initialize (name: name #f) (earth: earth #f) (trees: trees #f))
    (set! name~self name)
    (set! earth~self earth)
    (set! trees~self trees))
  
  
  (method override (print output readably)
    (print-unreadable self output
      (lambda (output)
        (format output "{s}" name)))))


;;;
;;;; Biomes
;;;


(definition tree-birch
  '("tree/birch_small" "tree/birch_med" "tree/birch_big"))

(definition tree-pine
  '("tree/pine_small" "tree/pine_med" "tree/pine_big"))


(definition public biomes
  (list
    (new Space-Biome name: 'turf   earth: "turf"   trees: tree-pine)
    (new Space-Biome name: 'greek  earth: "greek")
    (new Space-Biome name: 'ground earth: "ground" trees: tree-birch)
    (new Space-Biome name: 'fire   earth: "fire"   trees: tree-birch)
    (new Space-Biome name: 'funky  earth: "funky")
    (new Space-Biome name: 'roman  earth: "roman"  trees: tree-birch)))


(definition public (find-biome name)
  (or (find biomes name key: get-name~ return: 'item)
      (error "Unknown biome: {s}" name)))


(definition public (random-biome)
  (random-element biomes)))
