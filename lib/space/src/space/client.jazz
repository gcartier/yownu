;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Space Client
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module space.client jazz


(import (jazz.io)
        (jazz.jml)
        (jazz.library)
        (jazz.system)
        (jazz.ui)
        (world)
        (world.autoload)
        (world.client)
        (world.client.actions)
        (world.syntax (phase syntax)))


(class Space-Client extends World-Client
  
  
  (slot space-settings initialize #f getter generate)

  
  (method override (process-name)
    "Space")
  
  
  (method override (settings-root)
    {Directory Home ".space"})
  
  
  (method override (settings-alias)
    'Space)
  
  
  (method override (initialize-settings)
    (nextmethod)
    (set! space-settings (new File-Settings))
    (register-settings space-settings)
    (set-setting~ space-settings 'world.world-directories '(("space" . {Directory Space})))
    (set-setting~ space-settings 'world.worlds-directories #f)
    (set-setting~ space-settings 'world.user-assets? #f))
  
  
  (method override (default-bindings)
    (new Space-Bindings))
  
  
  (method override (use-profile?)
    #f)

  
  ;;;
  ;;;; Actions
  ;;;
  
  
  (method override (class-actions)
    (append (list (find-actions 'space))
            (nextmethod)))
  
  
  ;;;
  ;;;; Events
  ;;;
  
  
  (method (on-teleport-player evt)
    (place-player~ (current-zone))))


;;;
;;;; Bindings
;;;


(class Space-Bindings extends World-Bindings
  
  
  (form
    (<install>
      (<Space-Actions> name: space))))


;;;
;;;; Space
;;;


(class Space-Actions extends World-Actions
  
  
  (form
    (<install>                             title: "Space"
      (<Action-Item> name: teleport-player title: "Teleport Player" action-handler: {Event-Handler :application on-teleport-player} shortcut: {Shortcut :alt #\P})))))
