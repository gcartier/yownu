;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Space World
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2013
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module space.world jazz


(import (jazz.geometry)
        (jazz.graphic)
        (jazz.graphic.opengl.autoload)
        (jazz.graphic.opengl.glew)
        (jazz.io)
        (jazz.jml)
        (jazz.library)
        (jazz.media)
        (jazz.network)
        (jazz.platform)
        (jazz.runtime)
        (jazz.system)
        (jazz.ui)
        (time)
        (world)
        (world.actor)
        (world.animation)
        (world.area)
        (world.atlas)
        (world.autoload)
        (world.block)
        (world.collision)
        (world.counter)
        (world.debug)
        (world.draw)
        (world.dye)
        (world.dyes)
        (world.element)
        (world.enemy)
        (world.entity)
        (world.external)
        (world.external.milkshape)
        (world.external.obj)
        (world.folio)
        (world.foreign)
        (world.foreign.obj)
        (world.gadget)
        (world.generate)
        (world.geometry)
        (world.gravity)
        (world.history)
        (world.homogeneous)
        (world.interface)
        (world.io)
        (world.light)
        (world.lookat)
        (world.mark)
        (world.material)
        (world.mesh)
        (world.model)
        (world.object)
        (world.opengl)
        (world.plane)
        (world.planet)
        (world.player)
        (world.polygon)
        (world.procedural)
        (world.profiling)
        (world.programs)
        (world.quad)
        (world.render)
        (world.sector)
        (world.serialization)
        (world.settings)
        (world.shader)
        (world.shaders)
        (world.syntax (phase syntax))
        (world.texture)
        (world.tile)
        (world.triangle)
        (world.user)
        (world.view)
        (world.window)
        (world.zone)
        (space.biome))


(class Space-World extends World))
