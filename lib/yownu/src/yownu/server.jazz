;;;=========
;;;  Yownu
;;;=========
;;;
;;;; Yownu Server
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2016
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module yownu.server jazz


(import (jazz.action)
        (jazz.application)
        (jazz.component)
        (jazz.debuggee)
        (jazz.debugger)
        (jazz.editor)
        (jazz.editor.jazz)
        (jazz.editor.lisp)
        (jazz.io)
        (jazz.jml)
        (jazz.opengl.window)
        (jazz.platform)
        (jazz.settings)
        (jazz.version)
        (world)
        (world.autoload)
        (world.history)
        (world.interface)
        (world.interface.actions)
        (world.interface.bars)
        (world.interface.history)
        (world.role)
        (world.server)
        (world.server.actions)
        (world.server.bars)
        (world.settings)
        (world.syntax (phase syntax))
        (yownu)
        (yownu.window))


(class Yownu-Server extends World-Server
  
  
  (slot yownu-settings initialize #f getter generate)

  
  (method override (process-name)
    "Yownu-Server")
  
  
  (method override (process-icon)
    "WebServer")
  
  
  (method override (process-version)
    yownu-version)
  
  
  (method override (process-release)
    yownu-release)
  
  
  (method override (new-toplevel)
    (let ((fullscreen? (xor (world-setting 'world.fullscreen? (not (get-controller-debugger))) (shift-down?)))
          (pos (world-setting 'world.position {Point 250 100}))
          (size (world-setting 'world.size {Dimension 1200 800})))
      (let ((toplevel (new-opengl-window class: Yownu-Window fullscreen?: fullscreen? position: pos size: size need-version: {Version 3 2} render?: #f visible?: #f)))
        (set-caption-base~ toplevel "Yownu Server")
        toplevel)))
  
  
  (method override (initialize-settings)
    (nextmethod)
    (set! yownu-settings (new File-Settings))
    (register-settings yownu-settings)
    (let ((root (determine-root)))
      (when (not root)
        (system-message "Unable to find Yownu's world"
                        type: 'problem
                        title: "Yownu")
        (exit 1))
      (register-alias 'Root (get-list~ root))
      (register-alias 'Yownu-World '(Root "worlds" "yownu")))
    (when (not (exists?~ {Directory Yownu-World}))
      (system-message (format "Unable to find Yownu's world: {a}" (parse~ {Directory Yownu-World}))
                      type: 'problem
                      title: "Yownu")
      (exit 1))
    (set-setting~ yownu-settings 'world.world-directories '(("yownu" . {Directory Yownu-World})))
    (set-setting~ yownu-settings 'world.worlds-directories #f))
  
  
  (method override (default-preferences)
    (new Yownu-Preferences))
  
  
  (method override (default-bindings)
    (new Yownu-Bindings))
  
  
  (method override (use-profile?)
    #f)

  
  ;;;
  ;;;; Actions
  ;;;
  
  
  (method override (class-actions)
    (append (list (find-actions 'yownu))
            (nextmethod)))
  
  
  ;;;
  ;;;; Files
  ;;;
  
  
  (method override (news-file)
    (world-file '("devel" "yownu" "News.ftx") 'Resources))
  
  
  (method override (roadmap-file)
    (world-file '("devel" "yownu" "Roadmap.ftx") 'Resources))
  
  
  (method override (help-file)
    (world-file '("devel" "yownu" "Help.ftx") 'Resources))
  
  
  (method override (about-file)
    (world-file '("devel" "yownu" "About.ftx") 'Resources))
  
  
  ;;;
  ;;;; Interface
  ;;;
  
  
  (method override (setup-application-interface)
    (let ((interface (current-interface))
          (world (current-world)))
      (new History-Slider name: 'slider parent: interface size: {Dimension 400 40} location: '(center 32) visible?: #f)
      (install-bars
        `((,World-Main-Bar      main      horizontal (center -10))
          (,World-Server-Bar    server    horizontal (-10 -98))
          (,World-Game-Bar      game      horizontal (center -36))
          (,World-Window-Bar    window    horizontal (-10 -10))
          (,World-Camera-Bar    camera    horizontal (-10 -36))
          (,World-Debug-Bar     debug     horizontal (10 -10))
          (,World-History-Bar   history   horizontal (10 -36) #f)
          (,World-Models-Bar    models    horizontal none #f)
          (,World-Blocks-Bar    blocks    horizontal none #f)
          (,World-Edition-Bar   edition   vertical   (-36 center) #f)
          (,World-Interface-Bar interface vertical   (-10 center))
          (,World-Tutorial-Bar  tutorial  horizontal (10 10) #f)
          (,World-Objective-Bar objective horizontal (114 10) #f)
          (,World-Collision-Bar collision horizontal (-10 36) #f)))
      (set-layouter~ (child~ interface 'models) models-bar-layouter)
      (set-layouter~ (child~ interface 'blocks) blocks-bar-layouter)))


  ;;;
  ;;;; Roles
  ;;;
  
  
  (method override (role-traits role)
    (case role
      ((admin) admin-role)
      (else (nextmethod role))))


  ;;;
  ;;;; Admin
  ;;;


  (define-trait admin-bindings Bindings
    (<Role-Trait>
      (<install>
        (<world-menu!>)
        (<world-world!>
          (<!>           name: world-new               visible?: #f)
          (<!>           name: world-open              visible?: #f)
          (<!>           name: world-save              visible?: #f)
          (<!>           name: world-save-as           visible?: #f)
          (<!>           name: world-revert            visible?: #f)
          (<!>           name: toggle-user             visible?: #f))
        (<world-game!>
          (<!>           name: mind-control            visible?: #f)
          (<!>           name: toggle-aim              visible?: #f)
          (<!>           name: toggle-free-aim         visible?: #f)
          (<!>           name: character-pane          visible?: #f)
          (<!>           name: bag-pane                visible?: #f))
        (<world-spell!>
          (<!>           name: bullet                  visible?: #f)
          (<!>           name: arrow                   visible?: #f)
          (<!>           name: dash                    visible?: #f))
        (<world-camera!>
          (<!>           name: toggle-camera-smoothing visible?: #f)
          (<!>           name: toggle-camera-lock      visible?: #f))
        (<world-graphics!>
          (<!>           name: toggle-lighting         visible?: #f)
          (<!>           name: toggle-fog              visible?: #f)
          (<!>           name: toggle-gadgets          visible?: #f)
          (<!>           name: toggle-normals          visible?: #f)
          (<!>           name: toggle-x-rays           visible?: #f)
          (<!>           name: toggle-redstone-x-rays  visible?: #f)
          (<!>           name: toggle-blocks           visible?: #f)
          (<!>           name: toggle-post-processing  visible?: #f))
        (<world-sound!>
          (<!>           name: toggle-music            visible?: #f)
          (<!>           name: toggle-ambience         visible?: #f)
          (<!>           name: toggle-sound            visible?: #f))
        (<world-edition!>
          (<!>           name: select-target-mode      visible?: #f)
          (<!>           name: move-target-mode        visible?: #f)
          (<!>           name: rotate-target-mode      visible?: #f)
          (<!>           name: scale-target-mode       visible?: #f)
          (<!>           name: no-showcase             visible?: #f)
          (<!>           name: blocks-showcase         visible?: #f)
          (<!>           name: models-showcase         visible?: #f)
          (<!>           name: gadgets-showcase        visible?: #f)
          (<!>           name: tiles-showcase          visible?: #f)
          (<!>           name: shaders-showcase        visible?: #f)
          (<!>           name: animations-showcase     visible?: #f)
          (<!>           name: meshes-showcase         visible?: #f)
          (<!>           name: textures-showcase       visible?: #f)
          (<!>           name: skyboxes-showcase       visible?: #f)
          (<!>           name: toggle-grid             visible?: #f)
          (<!>           name: change-editor-mode      visible?: #f)
          (<!>           name: import-model            visible?: #f)
          (<!>           name: reload-textures         visible?: #f))
        (<world-interface!>
          (<!>           name: toggle-occlusion        visible?: #f)
          (<!>           name: toggle-wireframe        visible?: #f))
        (<world-history!>
          (<!>           name: step-backward           visible?: #f)
          (<!>           name: step-forward            visible?: #f)
          (<!>           name: step-over               visible?: #f)
          (<!>           name: reset-history           visible?: #f)
          (<!>           name: toggle-evaluate-future  visible?: #f))
        (<world-tutorial!>)
        (<world-debug!>
          (<!>           name: toggle-target           visible?: #f)
          (<!>           name: toggle-script           visible?: #f)
          (<!>           name: toggle-axes             visible?: #f)
          (<!>           name: toggle-debug-sectors    visible?: #f)
          (<!>           name: toggle-debug-areas      visible?: #f)
          (<!>           name: toggle-draw-atlas       visible?: #f)
          (<!>           name: toggle-draw-me          visible?: #f)
          (<!>           name: toggle-gc-sound         visible?: #f)
          (<!>           name: change-missile-behavior visible?: #f)
          (<!>           name: reset-marks             visible?: #f)
          (<!>           name: clear-console           visible?: #f)
          (<!>           name: clear-terminal          visible?: #f)
          (<!>           name: garbage-collect         visible?: #f)
          (<!>           name: explore-interface       visible?: #f)
          (<!>           name: test1                   visible?: #f)
          (<!>           name: test2                   visible?: #f)
          (<!>           name: test3                   visible?: #f)
          (<!>           name: test4                   visible?: #f)
          (<!>           name: test5                   visible?: #f)
          (<!>           name: test6                   visible?: #f)
          (<!>           name: test7                   visible?: #f)
          (<!>           name: test8                   visible?: #f)
          (<!>           name: test9                   visible?: #f)
          (<!>           name: test0                   visible?: #f)))))
  
  (define-trait admin-main World-Actionbar
    (<Role-Trait>
      (<install>
        (<!>             name: world-new               visible?: #f)
        (<!>             name: world-open              visible?: #f)
        (<!>             name: world-save              visible?: #f)
        (<!>             name: world-revert            visible?: #f)
        (<!>             name: toggle-user             visible?: #f))))
    
  (define-trait admin-game World-Actionbar
    (<Role-Trait>
      (<install>
        (<!>             name: bullet                  visible?: #f)
        (<!>             name: arrow                   visible?: #f)
        (<!>             name: dash                    visible?: #f)
        (<!>             name: mind-control            visible?: #f)
        (<!>             name: toggle-aim              visible?: #f)
        (<!>             name: toggle-free-aim         visible?: #f)
        (<!>             name: character-pane          visible?: #f)
        (<!>             name: bag-pane                visible?: #f))))

  (define-trait admin-interface World-Actionbar
    (<Role-Trait>
      (<install>
        (<!>             name: toggle-occlusion        visible?: #f)
        (<!>             name: toggle-wireframe        visible?: #f)
        (<!>             name: toggle-lighting         visible?: #f)
        (<!>             name: toggle-fog              visible?: #f)
        (<!>             name: toggle-gadgets          visible?: #f)
        (<!>             name: toggle-normals          visible?: #f)
        (<!>             name: toggle-x-rays           visible?: #f)
        (<!>             name: toggle-redstone-x-rays  visible?: #f)
        (<!>             name: toggle-blocks           visible?: #f)
        (<!>             name: toggle-post-processing  visible?: #f)
        (<!>             name: toggle-music            visible?: #f)
        (<!>             name: toggle-ambience         visible?: #f)
        (<!>             name: toggle-sound            visible?: #f))))

  (define-trait admin-camera World-Actionbar
    (<Role-Trait>
      (<install>
        (<!>             name: toggle-camera-smoothing visible?: #f)
        (<!>             name: toggle-camera-lock      visible?: #f))))

  (define-trait admin-edition World-Actionbar
    (<Role-Trait>
      (<install>
        (<!>             name: textures-showcase       visible?: #f))))

  (define-trait admin-models World-Actionbar
    (<Role-Trait>
      (<install>
        (<!>             name: import-model            visible?: #f))))

  (define-trait admin-history World-Actionbar
    (<Role-Trait>
      (<install>
        (<!>             name: step-backward           visible?: #f)
        (<!>             name: step-forward            visible?: #f)
        (<!>             name: step-over               visible?: #f)
        (<!>             name: reset-history           visible?: #f)
        (<!>             name: toggle-evaluate-future  visible?: #f))))
  
  (define-trait admin-window World-Actionbar
    (<Role-Trait>
      (<install>)))
  
  (define-trait admin-tutorial World-Actionbar
    (<Role-Trait>
      (<install>)))
  
  (define-trait admin-objective World-Actionbar
    (<Role-Trait>
      (<install>)))
  
  (define-trait admin-debug World-Actionbar
    (<Role-Trait>
      (<install>
        (<!>             name: toggle-target           visible?: #f)
        (<!>             name: toggle-script           visible?: #f)
        (<!>             name: toggle-axes             visible?: #f)
        (<!>             name: toggle-debug-sectors    visible?: #f)
        (<!>             name: toggle-debug-areas      visible?: #f)
        (<!>             name: toggle-draw-atlas       visible?: #f)
        (<!>             name: toggle-draw-me          visible?: #f)
        (<!>             name: change-missile-behavior visible?: #f)
        (<!>             name: reset-marks             visible?: #f)
        (<!>             name: clear-terminal          visible?: #f)
        (<!>             name: garbage-collect         visible?: #f)
        (<!>             name: explore-interface       visible?: #f))))

  (definition admin-role
    `((:bindings ,admin-bindings)
      (main ,admin-main)
      (game ,admin-game)
      (interface ,admin-interface)
      (camera ,admin-camera)
      (edition ,admin-edition)
      (models ,admin-models)
      (history ,admin-history)
      (window ,admin-window)
      (tutorial ,admin-tutorial)
      (objective ,admin-objective)
      (debug ,admin-debug))))


;;;
;;;; Preferences
;;;


(class Yownu-Preferences extends Application-Preferences
  
  
  (form
    (<install> toplevel-state: restored
      (<documents~>
        (<Jazz-Text-Preferences> name: jazz-text))
      @wait-debugger!?
      (<Debug-Preferences>       name: debug))))


;;;
;;;; Bindings
;;;


(class Yownu-Bindings extends Application-Bindings
  
  
  (form
    (<install>
      (<!>                       name: application visible?: #f)
      (<!>                       name: formatted-text visible?: #f)
      (<!>                       name: menubar visible?: #f)
      (<World-Menu-Actions>      name: world-menu)
      (<World-Interface-Actions> name: world-interface)
      (<World-Graphics-Actions>  name: world-graphics)
      (<World-Sound-Actions>     name: world-sound)
      (<World-Server-Actions>    name: world-server)
      (<World-World-Actions>     name: world-world)
      (<World-Zone-Actions>      name: world-zone)
      (<World-Movement-Actions>  name: world-movement)
      (<World-Camera-Actions>    name: world-camera)
      (<World-Game-Actions>      name: world-game)
      (<World-Spell-Actions>     name: world-spell)
      (<World-Edition-Actions>   name: world-edition)
      (<World-History-Actions>   name: world-history)
      (<World-Window-Actions>    name: world-window)
      (<World-Debug-Actions>     name: world-debug)
      (<World-Tutorial-Actions>  name: world-tutorial)
      (<World-Objective-Actions> name: world-objective)
      (<World-Collision-Actions> name: world-collision)
      (<World-Anonymous-Actions> name: world-anonymous)
      (<Yownu-Actions>           name: yownu))))


;;;
;;;; Actions
;;;


(class Yownu-Actions extends World-Actions
  
  
  (form
    (<install> title: "Yownu"))))
